apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: collector-with-ta
  namespace: opentelemetry-operator-system
spec:
  mode: statefulset
  targetAllocator:
    enabled: true
    serviceAccount: opentelemetry-targetallocator-sa
    prometheusCR:
      enabled: true
      podMonitorSelector: {}
      serviceMonitorSelector: {}
  config:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: "otel-collector-stateful"
              scrape_interval: 10s
              static_configs:
                - targets: ["0.0.0.0:8888"]
              metric_relabel_configs:
                - action: labeldrop
                  regex: (id|name)
                  replacement: $$1
                - action: labelmap
                  regex: label_(.+)
                  replacement: $$1

    exporters:
      debug: {}
      otlp:
        endpoint: otelcol-opentelemetry-collector.otel:4317
        tls:
          insecure: true

    service:
      telemetry:
        metrics:
          address: localhost:8888
          level: detailed
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: []
          exporters: [debug, otlp]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentelemetry-targetallocator-sa
  namespace: opentelemetry-operator-system
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: genteelbeacon
  namespace: opentelemetry-operator-system
spec:
  selector:
    matchExpressions:
      - { key: genteelbeacon, operator: Exists }
  namespaceSelector:
    matchNames:
      - genteelbeacon
  endpoints:
    - targetPort: servingport
      path: /metrics
      interval: 30s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ngf-nginx-gateway-fabric
  namespace: opentelemetry-operator-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-gateway-fabric
  namespaceSelector:
    matchNames:
      - nginx-gateway
  endpoints:
    - targetPort: 9113
      path: /metrics
      interval: 30s
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: collector
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
      - podmonitors
      - scrapeconfigs
      - probes
    verbs:
      - "*"
  - apiGroups: [""]
    resources:
      - namespaces
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: collector
subjects:
  - kind: ServiceAccount
    name: opentelemetry-targetallocator-sa
    namespace: opentelemetry-operator-system
---

